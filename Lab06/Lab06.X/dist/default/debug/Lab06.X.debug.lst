

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 25 10:04:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 05/05/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K50 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _PORTD	set	3971
    51  0000                     _TRISCbits	set	3988
    52  0000                     _LATC	set	3979
    53  0000                     _LATD	set	3980
    54  0000                     _LATCbits	set	3979
    55  0000                     _TRISD	set	3989
    56  0000                     _OSCCON	set	4051
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007F00                     __pcinit:
    62                           	callstack 0
    63  007F00                     start_initialization:
    64                           	callstack 0
    65  007F00                     __initialization:
    66                           	callstack 0
    67  007F00                     end_of_initialization:
    68                           	callstack 0
    69  007F00                     __end_of__initialization:
    70                           	callstack 0
    71  007F00  0100               	movlb	0
    72  007F02  EFA2  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	callstack 0
    77  000001                     ??_send2LCD:
    78  000001                     LCD_cmd@cx:
    79                           	callstack 0
    80                           
    81                           ; 1 bytes @ 0x0
    82  000001                     	ds	1
    83  000002                     ??_LCD_init:
    84                           
    85                           ; 1 bytes @ 0x1
    86  000002                     	ds	1
    87  000003                     send2LCD@xy:
    88                           	callstack 0
    89                           
    90                           ; 1 bytes @ 0x2
    91  000003                     	ds	1
    92  000004                     
    93                           ; 1 bytes @ 0x3
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 27 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   113 ;;      Params:         0       0       0       0       0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0
   115 ;;      Temps:          0       0       0       0       0       0       0       0       0
   116 ;;      Totals:         0       0       0       0       0       0       0       0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels required when called:    2
   119 ;; This function calls:
   120 ;;		_LCD_init
   121 ;;		_send2LCD
   122 ;; This function is called by:
   123 ;;		Startup code after reset
   124 ;; This function uses a non-reentrant model
   125 ;;
   126                           
   127                           	psect	text0
   128  007F44                     __ptext0:
   129                           	callstack 0
   130  007F44                     _main:
   131                           	callstack 29
   132  007F44                     
   133                           ;main.c: 28:     OSCCON = 0x74;
   134  007F44  0E74               	movlw	116
   135  007F46  6ED3               	movwf	211,c	;volatile
   136                           
   137                           ;main.c: 29:     TRISD = 0x00;
   138  007F48  0E00               	movlw	0
   139  007F4A  6E95               	movwf	149,c	;volatile
   140  007F4C                     
   141                           ;main.c: 30:     LATCbits.LATC2 = 0;
   142  007F4C  948B               	bcf	139,2,c	;volatile
   143  007F4E                     
   144                           ;main.c: 31:     LATCbits.LATC1 = 0;
   145  007F4E  928B               	bcf	139,1,c	;volatile
   146  007F50                     
   147                           ;main.c: 32:     LATCbits.LATC0 = 0;
   148  007F50  908B               	bcf	139,0,c	;volatile
   149  007F52                     
   150                           ;main.c: 34:     LCD_init();
   151  007F52  ECD0  F03F         	call	_LCD_init	;wreg free
   152  007F56                     
   153                           ;main.c: 36:     send2LCD('L');
   154  007F56  0E4C               	movlw	76
   155  007F58  EC8D  F03F         	call	_send2LCD
   156  007F5C                     
   157                           ;main.c: 37:     send2LCD('a');
   158  007F5C  0E61               	movlw	97
   159  007F5E  EC8D  F03F         	call	_send2LCD
   160  007F62                     
   161                           ;main.c: 38:     send2LCD('b');
   162  007F62  0E62               	movlw	98
   163  007F64  EC8D  F03F         	call	_send2LCD
   164  007F68                     
   165                           ;main.c: 39:     send2LCD('o');
   166  007F68  0E6F               	movlw	111
   167  007F6A  EC8D  F03F         	call	_send2LCD
   168  007F6E                     
   169                           ;main.c: 40:     send2LCD('r');
   170  007F6E  0E72               	movlw	114
   171  007F70  EC8D  F03F         	call	_send2LCD
   172  007F74                     
   173                           ;main.c: 41:     send2LCD('a');
   174  007F74  0E61               	movlw	97
   175  007F76  EC8D  F03F         	call	_send2LCD
   176  007F7A                     
   177                           ;main.c: 42:     send2LCD('t');
   178  007F7A  0E74               	movlw	116
   179  007F7C  EC8D  F03F         	call	_send2LCD
   180  007F80                     
   181                           ;main.c: 43:     send2LCD('o');
   182  007F80  0E6F               	movlw	111
   183  007F82  EC8D  F03F         	call	_send2LCD
   184  007F86                     
   185                           ;main.c: 44:     send2LCD('r');
   186  007F86  0E72               	movlw	114
   187  007F88  EC8D  F03F         	call	_send2LCD
   188  007F8C                     
   189                           ;main.c: 45:     send2LCD('i');
   190  007F8C  0E69               	movlw	105
   191  007F8E  EC8D  F03F         	call	_send2LCD
   192  007F92                     
   193                           ;main.c: 46:     send2LCD('o');
   194  007F92  0E6F               	movlw	111
   195  007F94  EC8D  F03F         	call	_send2LCD
   196  007F98                     l29:
   197  007F98  EFCC  F03F         	goto	l29
   198  007F9C  EF00  F000         	goto	start
   199  007FA0                     __end_of_main:
   200                           	callstack 0
   201                           
   202 ;; *************** function _send2LCD *****************
   203 ;; Defined at:
   204 ;;		line 51 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;  xy              1    wreg     unsigned char 
   207 ;; Auto vars:     Size  Location     Type
   208 ;;  xy              1    2[COMRAM] unsigned char 
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, status,2, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   218 ;;      Params:         0       0       0       0       0       0       0       0       0
   219 ;;      Locals:         1       0       0       0       0       0       0       0       0
   220 ;;      Temps:          2       0       0       0       0       0       0       0       0
   221 ;;      Totals:         3       0       0       0       0       0       0       0       0
   222 ;;Total ram usage:        3 bytes
   223 ;; Hardware stack levels used:    1
   224 ;; This function calls:
   225 ;;		Nothing
   226 ;; This function is called by:
   227 ;;		_main
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text1
   232  007F1A                     __ptext1:
   233                           	callstack 0
   234  007F1A                     _send2LCD:
   235                           	callstack 30
   236                           
   237                           ;incstack = 0
   238                           ;send2LCD@xy stored from wreg
   239  007F1A  6E03               	movwf	send2LCD@xy^0,c
   240  007F1C                     
   241                           ;main.c: 52:     LATCbits.LATC2 = 1;
   242  007F1C  848B               	bsf	139,2,c	;volatile
   243                           
   244                           ;main.c: 53:     LATCbits.LATC1 = 0;
   245  007F1E  928B               	bcf	139,1,c	;volatile
   246                           
   247                           ;main.c: 54:     LATCbits.LATC0 = 1;
   248  007F20  808B               	bsf	139,0,c	;volatile
   249  007F22                     
   250                           ;main.c: 55:     LATD = xy;
   251  007F22  C003  FF8C         	movff	send2LCD@xy,3980	;volatile
   252  007F26                     
   253                           ;main.c: 56:     __nop();
   254  007F26  F000               	nop	
   255  007F28                     
   256                           ;main.c: 57:     __nop();
   257  007F28  F000               	nop	
   258  007F2A                     
   259                           ;main.c: 58:     LATCbits.LATC0 = 0;
   260  007F2A  908B               	bcf	139,0,c	;volatile
   261  007F2C                     
   262                           ;main.c: 59:     _delay((unsigned long)((250)*(8000000/4000.0)));
   263  007F2C  0E03               	movlw	3
   264  007F2E  6E02               	movwf	(??_send2LCD+1)^0,c
   265  007F30  0E8A               	movlw	138
   266  007F32  6E01               	movwf	??_send2LCD^0,c
   267  007F34  0E56               	movlw	86
   268  007F36                     u27:
   269  007F36  2EE8               	decfsz	wreg,f,c
   270  007F38  D7FE               	bra	u27
   271  007F3A  2E01               	decfsz	??_send2LCD^0,f,c
   272  007F3C  D7FC               	bra	u27
   273  007F3E  2E02               	decfsz	(??_send2LCD+1)^0,f,c
   274  007F40  D7FA               	bra	u27
   275  007F42  0012               	return		;funcret
   276  007F44                     __end_of_send2LCD:
   277                           	callstack 0
   278                           
   279 ;; *************** function _LCD_init *****************
   280 ;; Defined at:
   281 ;;		line 62 in file "main.c"
   282 ;; Parameters:    Size  Location     Type
   283 ;;		None
   284 ;; Auto vars:     Size  Location     Type
   285 ;;		None
   286 ;; Return value:  Size  Location     Type
   287 ;;                  1    wreg      void 
   288 ;; Registers used:
   289 ;;		wreg, status,2, cstack
   290 ;; Tracked objects:
   291 ;;		On entry : 0/0
   292 ;;		On exit  : 0/0
   293 ;;		Unchanged: 0/0
   294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   295 ;;      Params:         0       0       0       0       0       0       0       0       0
   296 ;;      Locals:         0       0       0       0       0       0       0       0       0
   297 ;;      Temps:          2       0       0       0       0       0       0       0       0
   298 ;;      Totals:         2       0       0       0       0       0       0       0       0
   299 ;;Total ram usage:        2 bytes
   300 ;; Hardware stack levels used:    1
   301 ;; Hardware stack levels required when called:    1
   302 ;; This function calls:
   303 ;;		_LCD_cmd
   304 ;; This function is called by:
   305 ;;		_main
   306 ;; This function uses a non-reentrant model
   307 ;;
   308                           
   309                           	psect	text2
   310  007FA0                     __ptext2:
   311                           	callstack 0
   312  007FA0                     _LCD_init:
   313                           	callstack 29
   314  007FA0                     
   315                           ;main.c: 63:     LATC = 0;
   316  007FA0  0E00               	movlw	0
   317  007FA2  6E8B               	movwf	139,c	;volatile
   318  007FA4                     
   319                           ;main.c: 64:     TRISCbits.TRISC0 = 0;
   320  007FA4  9094               	bcf	148,0,c	;volatile
   321  007FA6                     
   322                           ;main.c: 65:     TRISCbits.TRISC2 = 0;
   323  007FA6  9494               	bcf	148,2,c	;volatile
   324  007FA8                     
   325                           ;main.c: 66:     TRISCbits.TRISC1 = 0;
   326  007FA8  9294               	bcf	148,1,c	;volatile
   327  007FAA                     
   328                           ;main.c: 67:     LCD_cmd(0x38);
   329  007FAA  0E38               	movlw	56
   330  007FAC  EC83  F03F         	call	_LCD_cmd
   331  007FB0                     
   332                           ;main.c: 68:     _delay((unsigned long)((250)*(8000000/4000.0)));
   333  007FB0  0E03               	movlw	3
   334  007FB2  6E03               	movwf	(??_LCD_init+1)^0,c
   335  007FB4  0E8A               	movlw	138
   336  007FB6  6E02               	movwf	??_LCD_init^0,c
   337  007FB8  0E56               	movlw	86
   338  007FBA                     u37:
   339  007FBA  2EE8               	decfsz	wreg,f,c
   340  007FBC  D7FE               	bra	u37
   341  007FBE  2E02               	decfsz	??_LCD_init^0,f,c
   342  007FC0  D7FC               	bra	u37
   343  007FC2  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   344  007FC4  D7FA               	bra	u37
   345  007FC6                     
   346                           ;main.c: 69:     LCD_cmd(0x0F);
   347  007FC6  0E0F               	movlw	15
   348  007FC8  EC83  F03F         	call	_LCD_cmd
   349  007FCC                     
   350                           ;main.c: 70:     _delay((unsigned long)((250)*(8000000/4000.0)));
   351  007FCC  0E03               	movlw	3
   352  007FCE  6E03               	movwf	(??_LCD_init+1)^0,c
   353  007FD0  0E8A               	movlw	138
   354  007FD2  6E02               	movwf	??_LCD_init^0,c
   355  007FD4  0E56               	movlw	86
   356  007FD6                     u47:
   357  007FD6  2EE8               	decfsz	wreg,f,c
   358  007FD8  D7FE               	bra	u47
   359  007FDA  2E02               	decfsz	??_LCD_init^0,f,c
   360  007FDC  D7FC               	bra	u47
   361  007FDE  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   362  007FE0  D7FA               	bra	u47
   363  007FE2                     
   364                           ;main.c: 71:     LCD_cmd(0x01);
   365  007FE2  0E01               	movlw	1
   366  007FE4  EC83  F03F         	call	_LCD_cmd
   367  007FE8                     
   368                           ;main.c: 72:     _delay((unsigned long)((250)*(8000000/4000.0)));
   369  007FE8  0E03               	movlw	3
   370  007FEA  6E03               	movwf	(??_LCD_init+1)^0,c
   371  007FEC  0E8A               	movlw	138
   372  007FEE  6E02               	movwf	??_LCD_init^0,c
   373  007FF0  0E56               	movlw	86
   374  007FF2                     u57:
   375  007FF2  2EE8               	decfsz	wreg,f,c
   376  007FF4  D7FE               	bra	u57
   377  007FF6  2E02               	decfsz	??_LCD_init^0,f,c
   378  007FF8  D7FC               	bra	u57
   379  007FFA  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   380  007FFC  D7FA               	bra	u57
   381  007FFE  0012               	return		;funcret
   382  008000                     __end_of_LCD_init:
   383                           	callstack 0
   384                           
   385 ;; *************** function _LCD_cmd *****************
   386 ;; Defined at:
   387 ;;		line 91 in file "main.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;  cx              1    wreg     unsigned char 
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  cx              1    0[COMRAM] unsigned char 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   401 ;;      Params:         0       0       0       0       0       0       0       0       0
   402 ;;      Locals:         1       0       0       0       0       0       0       0       0
   403 ;;      Temps:          0       0       0       0       0       0       0       0       0
   404 ;;      Totals:         1       0       0       0       0       0       0       0       0
   405 ;;Total ram usage:        1 bytes
   406 ;; Hardware stack levels used:    1
   407 ;; This function calls:
   408 ;;		Nothing
   409 ;; This function is called by:
   410 ;;		_LCD_init
   411 ;; This function uses a non-reentrant model
   412 ;;
   413                           
   414                           	psect	text3
   415  007F06                     __ptext3:
   416                           	callstack 0
   417  007F06                     _LCD_cmd:
   418                           	callstack 29
   419                           
   420                           ;incstack = 0
   421                           ;LCD_cmd@cx stored from wreg
   422  007F06  6E01               	movwf	LCD_cmd@cx^0,c
   423  007F08                     
   424                           ;main.c: 93:     LATCbits.LATC2 = 0;
   425  007F08  948B               	bcf	139,2,c	;volatile
   426                           
   427                           ;main.c: 94:     LATCbits.LATC1 = 0;
   428  007F0A  928B               	bcf	139,1,c	;volatile
   429                           
   430                           ;main.c: 95:     LATCbits.LATC0 = 1;
   431  007F0C  808B               	bsf	139,0,c	;volatile
   432                           
   433                           ;main.c: 96:     __nop();
   434  007F0E  F000               	nop	
   435  007F10                     
   436                           ;main.c: 97:     LATD = cx;
   437  007F10  C001  FF8C         	movff	LCD_cmd@cx,3980	;volatile
   438  007F14                     
   439                           ;main.c: 98:     __nop();
   440  007F14  F000               	nop	
   441  007F16                     
   442                           ;main.c: 99:     LATCbits.LATC0 = 0;
   443  007F16  908B               	bcf	139,0,c	;volatile
   444  007F18  0012               	return		;funcret
   445  007F1A                     __end_of_LCD_cmd:
   446                           	callstack 0
   447  0000                     
   448                           	psect	rparam
   449  0000                     
   450                           	psect	idloc
   451                           
   452                           ;Config register IDLOC0 @ 0x200000
   453                           ;	unspecified, using default values
   454  200000                     	org	2097152
   455  200000  FF                 	db	255
   456                           
   457                           ;Config register IDLOC1 @ 0x200001
   458                           ;	unspecified, using default values
   459  200001                     	org	2097153
   460  200001  FF                 	db	255
   461                           
   462                           ;Config register IDLOC2 @ 0x200002
   463                           ;	unspecified, using default values
   464  200002                     	org	2097154
   465  200002  FF                 	db	255
   466                           
   467                           ;Config register IDLOC3 @ 0x200003
   468                           ;	unspecified, using default values
   469  200003                     	org	2097155
   470  200003  FF                 	db	255
   471                           
   472                           ;Config register IDLOC4 @ 0x200004
   473                           ;	unspecified, using default values
   474  200004                     	org	2097156
   475  200004  FF                 	db	255
   476                           
   477                           ;Config register IDLOC5 @ 0x200005
   478                           ;	unspecified, using default values
   479  200005                     	org	2097157
   480  200005  FF                 	db	255
   481                           
   482                           ;Config register IDLOC6 @ 0x200006
   483                           ;	unspecified, using default values
   484  200006                     	org	2097158
   485  200006  FF                 	db	255
   486                           
   487                           ;Config register IDLOC7 @ 0x200007
   488                           ;	unspecified, using default values
   489  200007                     	org	2097159
   490  200007  FF                 	db	255
   491                           
   492                           	psect	config
   493                           
   494                           ;Config register CONFIG1L @ 0x300000
   495                           ;	PLL Selection
   496                           ;	PLLSEL = PLL4X, 4x clock multiplier
   497                           ;	PLL Enable Configuration bit
   498                           ;	CFGPLLEN = ON, PLL Enabled
   499                           ;	CPU System Clock Postscaler
   500                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   501                           ;	Low Speed USB mode with 48 MHz system clock
   502                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   503  300000                     	org	3145728
   504  300000  02                 	db	2
   505                           
   506                           ;Config register CONFIG1H @ 0x300001
   507                           ;	Oscillator Selection
   508                           ;	FOSC = INTOSCIO, Internal oscillator
   509                           ;	Primary Oscillator Shutdown
   510                           ;	PCLKEN = ON, Primary oscillator enabled
   511                           ;	Fail-Safe Clock Monitor
   512                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   513                           ;	Internal/External Oscillator Switchover
   514                           ;	IESO = OFF, Oscillator Switchover mode disabled
   515  300001                     	org	3145729
   516  300001  28                 	db	40
   517                           
   518                           ;Config register CONFIG2L @ 0x300002
   519                           ;	Power-up Timer Enable
   520                           ;	nPWRTEN = OFF, Power up timer disabled
   521                           ;	Brown-out Reset Enable
   522                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   523                           ;	Brown-out Reset Voltage
   524                           ;	BORV = 190, BOR set to 1.9V nominal
   525                           ;	Low-Power Brown-out Reset
   526                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   527  300002                     	org	3145730
   528  300002  5F                 	db	95
   529                           
   530                           ;Config register CONFIG2H @ 0x300003
   531                           ;	Watchdog Timer Enable bits
   532                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   533                           ;	Watchdog Timer Postscaler
   534                           ;	WDTPS = 32768, 1:32768
   535  300003                     	org	3145731
   536  300003  3C                 	db	60
   537                           
   538                           ; Padding undefined space
   539  300004                     	org	3145732
   540  300004  FF                 	db	255
   541                           
   542                           ;Config register CONFIG3H @ 0x300005
   543                           ;	CCP2 MUX bit
   544                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   545                           ;	PORTB A/D Enable bit
   546                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   547                           ;	Timer3 Clock Input MUX bit
   548                           ;	T3CMX = RC0, T3CKI function is on RC0
   549                           ;	SDO Output MUX bit
   550                           ;	SDOMX = RB3, SDO function is on RB3
   551                           ;	Master Clear Reset Pin Enable
   552                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   553  300005                     	org	3145733
   554  300005  D1                 	db	209
   555                           
   556                           ;Config register CONFIG4L @ 0x300006
   557                           ;	Stack Full/Underflow Reset
   558                           ;	STVREN = ON, Stack full/underflow will cause Reset
   559                           ;	Single-Supply ICSP Enable bit
   560                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   561                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   562                           ;	ICPRT = OFF, ICPORT disabled
   563                           ;	Extended Instruction Set Enable bit
   564                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   565                           ;	Background Debugger Enable bit
   566                           ;	DEBUG = 0x1, unprogrammed default
   567  300006                     	org	3145734
   568  300006  85                 	db	133
   569                           
   570                           ; Padding undefined space
   571  300007                     	org	3145735
   572  300007  FF                 	db	255
   573                           
   574                           ;Config register CONFIG5L @ 0x300008
   575                           ;	Block 0 Code Protect
   576                           ;	CP0 = OFF, Block 0 is not code-protected
   577                           ;	Block 1 Code Protect
   578                           ;	CP1 = OFF, Block 1 is not code-protected
   579                           ;	Block 2 Code Protect
   580                           ;	CP2 = OFF, Block 2 is not code-protected
   581                           ;	Block 3 Code Protect
   582                           ;	CP3 = OFF, Block 3 is not code-protected
   583  300008                     	org	3145736
   584  300008  0F                 	db	15
   585                           
   586                           ;Config register CONFIG5H @ 0x300009
   587                           ;	Boot Block Code Protect
   588                           ;	CPB = OFF, Boot block is not code-protected
   589                           ;	Data EEPROM Code Protect
   590                           ;	CPD = OFF, Data EEPROM is not code-protected
   591  300009                     	org	3145737
   592  300009  C0                 	db	192
   593                           
   594                           ;Config register CONFIG6L @ 0x30000A
   595                           ;	Block 0 Write Protect
   596                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   597                           ;	Block 1 Write Protect
   598                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   599                           ;	Block 2 Write Protect
   600                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   601                           ;	Block 3 Write Protect
   602                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   603  30000A                     	org	3145738
   604  30000A  0F                 	db	15
   605                           
   606                           ;Config register CONFIG6H @ 0x30000B
   607                           ;	Configuration Registers Write Protect
   608                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   609                           ;	Boot Block Write Protect
   610                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   611                           ;	Data EEPROM Write Protect
   612                           ;	WRTD = OFF, Data EEPROM is not write-protected
   613  30000B                     	org	3145739
   614  30000B  E0                 	db	224
   615                           
   616                           ;Config register CONFIG7L @ 0x30000C
   617                           ;	Block 0 Table Read Protect
   618                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   619                           ;	Block 1 Table Read Protect
   620                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   621                           ;	Block 2 Table Read Protect
   622                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   623                           ;	Block 3 Table Read Protect
   624                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   625  30000C                     	org	3145740
   626  30000C  0F                 	db	15
   627                           
   628                           ;Config register CONFIG7H @ 0x30000D
   629                           ;	Boot Block Table Read Protect
   630                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   631  30000D                     	org	3145741
   632  30000D  40                 	db	64
   633                           tosu	equ	0xFFF
   634                           tosh	equ	0xFFE
   635                           tosl	equ	0xFFD
   636                           stkptr	equ	0xFFC
   637                           pclatu	equ	0xFFB
   638                           pclath	equ	0xFFA
   639                           pcl	equ	0xFF9
   640                           tblptru	equ	0xFF8
   641                           tblptrh	equ	0xFF7
   642                           tblptrl	equ	0xFF6
   643                           tablat	equ	0xFF5
   644                           prodh	equ	0xFF4
   645                           prodl	equ	0xFF3
   646                           indf0	equ	0xFEF
   647                           postinc0	equ	0xFEE
   648                           postdec0	equ	0xFED
   649                           preinc0	equ	0xFEC
   650                           plusw0	equ	0xFEB
   651                           fsr0h	equ	0xFEA
   652                           fsr0l	equ	0xFE9
   653                           wreg	equ	0xFE8
   654                           indf1	equ	0xFE7
   655                           postinc1	equ	0xFE6
   656                           postdec1	equ	0xFE5
   657                           preinc1	equ	0xFE4
   658                           plusw1	equ	0xFE3
   659                           fsr1h	equ	0xFE2
   660                           fsr1l	equ	0xFE1
   661                           bsr	equ	0xFE0
   662                           indf2	equ	0xFDF
   663                           postinc2	equ	0xFDE
   664                           postdec2	equ	0xFDD
   665                           preinc2	equ	0xFDC
   666                           plusw2	equ	0xFDB
   667                           fsr2h	equ	0xFDA
   668                           fsr2l	equ	0xFD9
   669                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_init
    _main->_send2LCD
    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                           _LCD_init
                           _send2LCD
 ---------------------------------------------------------------------------------
 (1) _send2LCD                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      15
                                              1 COMRAM     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_cmd
   _send2LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 25 10:04:14 2021

                     l30 7F98                       l35 7F42                       l29 7F98  
                     l38 7FFE                       l47 7F18                       u27 7F36  
                     u37 7FBA                       u47 7FD6                       u57 7FF2  
                    l723 7F08                      l731 7FA0                      l725 7F10  
                    l741 7FB0                      l733 7FA4                      l727 7F14  
                    l743 7FC6                      l735 7FA6                      l751 7F1C  
                    l729 7F16                      l745 7FCC                      l737 7FA8  
                    l761 7F2C                      l753 7F22                      l747 7FE2  
                    l739 7FAA                      l755 7F26                      l771 7F52  
                    l763 7F44                      l749 7FE8                      l757 7F28  
                    l781 7F6E                      l773 7F56                      l765 7F4C  
                    l759 7F2A                      l791 7F8C                      l783 7F74  
                    l775 7F5C                      l767 7F4E                      l793 7F92  
                    l785 7F7A                      l777 7F62                      l769 7F50  
                    l787 7F80                      l779 7F68                      l789 7F86  
                    wreg 000FE8          __end_of_LCD_cmd 7F1A                     _LATC 000F8B  
                   _LATD 000F8C                     _main 7F44                     start 0000  
           ___param_bank 000000         __end_of_LCD_init 8000                    ?_main 0001  
                  _PORTD 000F83                    _TRISD 000F95          __initialization 7F00  
           __end_of_main 7FA0                   ??_main 0004            __activetblptr 000000  
              ??_LCD_cmd 0001                   _OSCCON 000FD3         __end_of_send2LCD 7F44  
             __accesstop 0060  __end_of__initialization 7F00                ?_LCD_init 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001                LCD_cmd@cx 0001  
             ??_LCD_init 0002                  _LCD_cmd 7F06                ?_send2LCD 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F00  
                __ramtop 0800                  __ptext0 7F44                  __ptext1 7F1A  
                __ptext2 7FA0                  __ptext3 7F06     end_of_initialization 7F00  
             ??_send2LCD 0001                _TRISCbits 000F94        __size_of_LCD_init 0060  
    start_initialization 7F00               send2LCD@xy 0003                 ?_LCD_cmd 0001  
      __size_of_send2LCD 002A                 _LATCbits 000F8B                 _LCD_init 7FA0  
       __size_of_LCD_cmd 0014                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 005C                 _send2LCD 7F1A  
