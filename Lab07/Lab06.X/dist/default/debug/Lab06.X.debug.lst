

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue May 25 11:00:58 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 05/05/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F45K50 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _ANSELD	set	3934
    51  0000                     _ANSELC	set	3933
    52  0000                     _PORTD	set	3971
    53  0000                     _TRISCbits	set	3988
    54  0000                     _LATC	set	3979
    55  0000                     _LATD	set	3980
    56  0000                     _LATCbits	set	3979
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISC	set	3988
    59  0000                     _OSCCON	set	4051
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64  007EEE                     __pcinit:
    65                           	callstack 0
    66  007EEE                     start_initialization:
    67                           	callstack 0
    68  007EEE                     __initialization:
    69                           	callstack 0
    70  007EEE                     end_of_initialization:
    71                           	callstack 0
    72  007EEE                     __end_of__initialization:
    73                           	callstack 0
    74  007EEE  0100               	movlb	0
    75  007EF0  EFC9  F03F         	goto	_main	;jump to C main() function
    76                           
    77                           	psect	cstackCOMRAM
    78  000001                     __pcstackCOMRAM:
    79                           	callstack 0
    80  000001                     ??_send2LCD:
    81  000001                     LCD_cmd@cx:
    82                           	callstack 0
    83                           
    84                           ; 1 bytes @ 0x0
    85  000001                     	ds	1
    86  000002                     ??_LCD_init:
    87                           
    88                           ; 1 bytes @ 0x1
    89  000002                     	ds	1
    90  000003                     send2LCD@xy:
    91                           	callstack 0
    92                           
    93                           ; 1 bytes @ 0x2
    94  000003                     	ds	1
    95  000004                     
    96                           ; 1 bytes @ 0x3
    97 ;;
    98 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    99 ;;
   100 ;; *************** function _main *****************
   101 ;; Defined at:
   102 ;;		line 27 in file "main.c"
   103 ;; Parameters:    Size  Location     Type
   104 ;;		None
   105 ;; Auto vars:     Size  Location     Type
   106 ;;		None
   107 ;; Return value:  Size  Location     Type
   108 ;;                  1    wreg      void 
   109 ;; Registers used:
   110 ;;		wreg, status,2, cstack
   111 ;; Tracked objects:
   112 ;;		On entry : 0/0
   113 ;;		On exit  : 0/0
   114 ;;		Unchanged: 0/0
   115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   116 ;;      Params:         0       0       0       0       0       0       0       0       0
   117 ;;      Locals:         0       0       0       0       0       0       0       0       0
   118 ;;      Temps:          0       0       0       0       0       0       0       0       0
   119 ;;      Totals:         0       0       0       0       0       0       0       0       0
   120 ;;Total ram usage:        0 bytes
   121 ;; Hardware stack levels required when called:    2
   122 ;; This function calls:
   123 ;;		_LCD_init
   124 ;;		_send2LCD
   125 ;; This function is called by:
   126 ;;		Startup code after reset
   127 ;; This function uses a non-reentrant model
   128 ;;
   129                           
   130                           	psect	text0
   131  007F92                     __ptext0:
   132                           	callstack 0
   133  007F92                     _main:
   134                           	callstack 29
   135  007F92                     
   136                           ;main.c: 28:     OSCCON = 0x74;
   137  007F92  0E74               	movlw	116
   138  007F94  6ED3               	movwf	211,c	;volatile
   139                           
   140                           ;main.c: 29:     ANSELC = 0;
   141  007F96  0E00               	movlw	0
   142  007F98  010F               	movlb	15	; () banked
   143  007F9A  6F5D               	movwf	93,b	;volatile
   144                           
   145                           ;main.c: 30:     TRISC = 0x00;
   146  007F9C  0E00               	movlw	0
   147  007F9E  6E94               	movwf	148,c	;volatile
   148                           
   149                           ;main.c: 31:     ANSELD = 0;
   150  007FA0  0E00               	movlw	0
   151  007FA2  6F5E               	movwf	94,b	;volatile
   152                           
   153                           ;main.c: 32:     TRISD = 0x00;
   154  007FA4  0E00               	movlw	0
   155  007FA6  6E95               	movwf	149,c	;volatile
   156                           
   157                           ;main.c: 34:     TRISD = 0x00;
   158  007FA8  0E00               	movlw	0
   159  007FAA  6E95               	movwf	149,c	;volatile
   160  007FAC                     
   161                           ; BSR set to: 15
   162                           ;main.c: 36:     LATCbits.LATC2 = 0;
   163  007FAC  948B               	bcf	139,2,c	;volatile
   164  007FAE                     
   165                           ; BSR set to: 15
   166                           ;main.c: 37:     LATCbits.LATC1 = 0;
   167  007FAE  928B               	bcf	139,1,c	;volatile
   168  007FB0                     
   169                           ; BSR set to: 15
   170                           ;main.c: 38:     LATCbits.LATC0 = 0;
   171  007FB0  908B               	bcf	139,0,c	;volatile
   172  007FB2                     
   173                           ; BSR set to: 15
   174                           ;main.c: 40:     LCD_init();
   175  007FB2  EC99  F03F         	call	_LCD_init	;wreg free
   176  007FB6                     
   177                           ;main.c: 42:     send2LCD('L');
   178  007FB6  0E4C               	movlw	76
   179  007FB8  EC84  F03F         	call	_send2LCD
   180  007FBC                     
   181                           ;main.c: 43:     send2LCD('a');
   182  007FBC  0E61               	movlw	97
   183  007FBE  EC84  F03F         	call	_send2LCD
   184  007FC2                     
   185                           ;main.c: 44:     send2LCD('b');
   186  007FC2  0E62               	movlw	98
   187  007FC4  EC84  F03F         	call	_send2LCD
   188  007FC8                     
   189                           ;main.c: 45:     send2LCD('o');
   190  007FC8  0E6F               	movlw	111
   191  007FCA  EC84  F03F         	call	_send2LCD
   192  007FCE                     
   193                           ;main.c: 46:     send2LCD('r');
   194  007FCE  0E72               	movlw	114
   195  007FD0  EC84  F03F         	call	_send2LCD
   196  007FD4                     
   197                           ;main.c: 47:     send2LCD('a');
   198  007FD4  0E61               	movlw	97
   199  007FD6  EC84  F03F         	call	_send2LCD
   200  007FDA                     
   201                           ;main.c: 48:     send2LCD('t');
   202  007FDA  0E74               	movlw	116
   203  007FDC  EC84  F03F         	call	_send2LCD
   204  007FE0                     
   205                           ;main.c: 49:     send2LCD('o');
   206  007FE0  0E6F               	movlw	111
   207  007FE2  EC84  F03F         	call	_send2LCD
   208  007FE6                     
   209                           ;main.c: 50:     send2LCD('r');
   210  007FE6  0E72               	movlw	114
   211  007FE8  EC84  F03F         	call	_send2LCD
   212  007FEC                     
   213                           ;main.c: 51:     send2LCD('i');
   214  007FEC  0E69               	movlw	105
   215  007FEE  EC84  F03F         	call	_send2LCD
   216  007FF2                     
   217                           ;main.c: 52:     send2LCD('o');
   218  007FF2  0E6F               	movlw	111
   219  007FF4  EC84  F03F         	call	_send2LCD
   220  007FF8                     l35:
   221  007FF8  EFFC  F03F         	goto	l35
   222  007FFC  EF00  F000         	goto	start
   223  008000                     __end_of_main:
   224                           	callstack 0
   225                           
   226 ;; *************** function _send2LCD *****************
   227 ;; Defined at:
   228 ;;		line 57 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;  xy              1    wreg     unsigned char 
   231 ;; Auto vars:     Size  Location     Type
   232 ;;  xy              1    2[COMRAM] unsigned char 
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   242 ;;      Params:         0       0       0       0       0       0       0       0       0
   243 ;;      Locals:         1       0       0       0       0       0       0       0       0
   244 ;;      Temps:          2       0       0       0       0       0       0       0       0
   245 ;;      Totals:         3       0       0       0       0       0       0       0       0
   246 ;;Total ram usage:        3 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; This function calls:
   249 ;;		Nothing
   250 ;; This function is called by:
   251 ;;		_main
   252 ;; This function uses a non-reentrant model
   253 ;;
   254                           
   255                           	psect	text1
   256  007F08                     __ptext1:
   257                           	callstack 0
   258  007F08                     _send2LCD:
   259                           	callstack 30
   260                           
   261                           ;incstack = 0
   262                           ;send2LCD@xy stored from wreg
   263  007F08  6E03               	movwf	send2LCD@xy^0,c
   264  007F0A                     
   265                           ;main.c: 58:     LATCbits.LATC2 = 1;
   266  007F0A  848B               	bsf	139,2,c	;volatile
   267                           
   268                           ;main.c: 59:     LATCbits.LATC1 = 0;
   269  007F0C  928B               	bcf	139,1,c	;volatile
   270                           
   271                           ;main.c: 60:     LATCbits.LATC0 = 1;
   272  007F0E  808B               	bsf	139,0,c	;volatile
   273  007F10                     
   274                           ;main.c: 61:     LATD = xy;
   275  007F10  C003  FF8C         	movff	send2LCD@xy,3980	;volatile
   276  007F14                     
   277                           ;main.c: 62:     __nop();
   278  007F14  F000               	nop	
   279  007F16                     
   280                           ;main.c: 63:     __nop();
   281  007F16  F000               	nop	
   282  007F18                     
   283                           ;main.c: 64:     LATCbits.LATC0 = 0;
   284  007F18  908B               	bcf	139,0,c	;volatile
   285  007F1A                     
   286                           ;main.c: 65:     _delay((unsigned long)((250)*(8000000/4000.0)));
   287  007F1A  0E03               	movlw	3
   288  007F1C  6E02               	movwf	(??_send2LCD+1)^0,c
   289  007F1E  0E8A               	movlw	138
   290  007F20  6E01               	movwf	??_send2LCD^0,c
   291  007F22  0E56               	movlw	86
   292  007F24                     u27:
   293  007F24  2EE8               	decfsz	wreg,f,c
   294  007F26  D7FE               	bra	u27
   295  007F28  2E01               	decfsz	??_send2LCD^0,f,c
   296  007F2A  D7FC               	bra	u27
   297  007F2C  2E02               	decfsz	(??_send2LCD+1)^0,f,c
   298  007F2E  D7FA               	bra	u27
   299  007F30  0012               	return		;funcret
   300  007F32                     __end_of_send2LCD:
   301                           	callstack 0
   302                           
   303 ;; *************** function _LCD_init *****************
   304 ;; Defined at:
   305 ;;		line 68 in file "main.c"
   306 ;; Parameters:    Size  Location     Type
   307 ;;		None
   308 ;; Auto vars:     Size  Location     Type
   309 ;;		None
   310 ;; Return value:  Size  Location     Type
   311 ;;                  1    wreg      void 
   312 ;; Registers used:
   313 ;;		wreg, status,2, cstack
   314 ;; Tracked objects:
   315 ;;		On entry : 0/0
   316 ;;		On exit  : 0/0
   317 ;;		Unchanged: 0/0
   318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   319 ;;      Params:         0       0       0       0       0       0       0       0       0
   320 ;;      Locals:         0       0       0       0       0       0       0       0       0
   321 ;;      Temps:          2       0       0       0       0       0       0       0       0
   322 ;;      Totals:         2       0       0       0       0       0       0       0       0
   323 ;;Total ram usage:        2 bytes
   324 ;; Hardware stack levels used:    1
   325 ;; Hardware stack levels required when called:    1
   326 ;; This function calls:
   327 ;;		_LCD_cmd
   328 ;; This function is called by:
   329 ;;		_main
   330 ;; This function uses a non-reentrant model
   331 ;;
   332                           
   333                           	psect	text2
   334  007F32                     __ptext2:
   335                           	callstack 0
   336  007F32                     _LCD_init:
   337                           	callstack 29
   338  007F32                     
   339                           ;main.c: 69:     LATC = 0;
   340  007F32  0E00               	movlw	0
   341  007F34  6E8B               	movwf	139,c	;volatile
   342  007F36                     
   343                           ;main.c: 70:     TRISCbits.TRISC0 = 0;
   344  007F36  9094               	bcf	148,0,c	;volatile
   345  007F38                     
   346                           ;main.c: 71:     TRISCbits.TRISC2 = 0;
   347  007F38  9494               	bcf	148,2,c	;volatile
   348  007F3A                     
   349                           ;main.c: 72:     TRISCbits.TRISC1 = 0;
   350  007F3A  9294               	bcf	148,1,c	;volatile
   351  007F3C                     
   352                           ;main.c: 73:     LCD_cmd(0x38);
   353  007F3C  0E38               	movlw	56
   354  007F3E  EC7A  F03F         	call	_LCD_cmd
   355  007F42                     
   356                           ;main.c: 74:     _delay((unsigned long)((250)*(8000000/4000.0)));
   357  007F42  0E03               	movlw	3
   358  007F44  6E03               	movwf	(??_LCD_init+1)^0,c
   359  007F46  0E8A               	movlw	138
   360  007F48  6E02               	movwf	??_LCD_init^0,c
   361  007F4A  0E56               	movlw	86
   362  007F4C                     u37:
   363  007F4C  2EE8               	decfsz	wreg,f,c
   364  007F4E  D7FE               	bra	u37
   365  007F50  2E02               	decfsz	??_LCD_init^0,f,c
   366  007F52  D7FC               	bra	u37
   367  007F54  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   368  007F56  D7FA               	bra	u37
   369  007F58                     
   370                           ;main.c: 75:     LCD_cmd(0x0F);
   371  007F58  0E0F               	movlw	15
   372  007F5A  EC7A  F03F         	call	_LCD_cmd
   373  007F5E                     
   374                           ;main.c: 76:     _delay((unsigned long)((250)*(8000000/4000.0)));
   375  007F5E  0E03               	movlw	3
   376  007F60  6E03               	movwf	(??_LCD_init+1)^0,c
   377  007F62  0E8A               	movlw	138
   378  007F64  6E02               	movwf	??_LCD_init^0,c
   379  007F66  0E56               	movlw	86
   380  007F68                     u47:
   381  007F68  2EE8               	decfsz	wreg,f,c
   382  007F6A  D7FE               	bra	u47
   383  007F6C  2E02               	decfsz	??_LCD_init^0,f,c
   384  007F6E  D7FC               	bra	u47
   385  007F70  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   386  007F72  D7FA               	bra	u47
   387  007F74                     
   388                           ;main.c: 77:     LCD_cmd(0x01);
   389  007F74  0E01               	movlw	1
   390  007F76  EC7A  F03F         	call	_LCD_cmd
   391  007F7A                     
   392                           ;main.c: 78:     _delay((unsigned long)((250)*(8000000/4000.0)));
   393  007F7A  0E03               	movlw	3
   394  007F7C  6E03               	movwf	(??_LCD_init+1)^0,c
   395  007F7E  0E8A               	movlw	138
   396  007F80  6E02               	movwf	??_LCD_init^0,c
   397  007F82  0E56               	movlw	86
   398  007F84                     u57:
   399  007F84  2EE8               	decfsz	wreg,f,c
   400  007F86  D7FE               	bra	u57
   401  007F88  2E02               	decfsz	??_LCD_init^0,f,c
   402  007F8A  D7FC               	bra	u57
   403  007F8C  2E03               	decfsz	(??_LCD_init+1)^0,f,c
   404  007F8E  D7FA               	bra	u57
   405  007F90  0012               	return		;funcret
   406  007F92                     __end_of_LCD_init:
   407                           	callstack 0
   408                           
   409 ;; *************** function _LCD_cmd *****************
   410 ;; Defined at:
   411 ;;		line 97 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;  cx              1    wreg     unsigned char 
   414 ;; Auto vars:     Size  Location     Type
   415 ;;  cx              1    0[COMRAM] unsigned char 
   416 ;; Return value:  Size  Location     Type
   417 ;;                  1    wreg      void 
   418 ;; Registers used:
   419 ;;		wreg
   420 ;; Tracked objects:
   421 ;;		On entry : 0/0
   422 ;;		On exit  : 0/0
   423 ;;		Unchanged: 0/0
   424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   425 ;;      Params:         0       0       0       0       0       0       0       0       0
   426 ;;      Locals:         1       0       0       0       0       0       0       0       0
   427 ;;      Temps:          0       0       0       0       0       0       0       0       0
   428 ;;      Totals:         1       0       0       0       0       0       0       0       0
   429 ;;Total ram usage:        1 bytes
   430 ;; Hardware stack levels used:    1
   431 ;; This function calls:
   432 ;;		Nothing
   433 ;; This function is called by:
   434 ;;		_LCD_init
   435 ;; This function uses a non-reentrant model
   436 ;;
   437                           
   438                           	psect	text3
   439  007EF4                     __ptext3:
   440                           	callstack 0
   441  007EF4                     _LCD_cmd:
   442                           	callstack 29
   443                           
   444                           ;incstack = 0
   445                           ;LCD_cmd@cx stored from wreg
   446  007EF4  6E01               	movwf	LCD_cmd@cx^0,c
   447  007EF6                     
   448                           ;main.c: 99:     LATCbits.LATC2 = 0;
   449  007EF6  948B               	bcf	139,2,c	;volatile
   450                           
   451                           ;main.c: 100:     LATCbits.LATC1 = 0;
   452  007EF8  928B               	bcf	139,1,c	;volatile
   453                           
   454                           ;main.c: 101:     LATCbits.LATC0 = 1;
   455  007EFA  808B               	bsf	139,0,c	;volatile
   456                           
   457                           ;main.c: 102:     __nop();
   458  007EFC  F000               	nop	
   459  007EFE                     
   460                           ;main.c: 103:     LATD = cx;
   461  007EFE  C001  FF8C         	movff	LCD_cmd@cx,3980	;volatile
   462  007F02                     
   463                           ;main.c: 104:     __nop();
   464  007F02  F000               	nop	
   465  007F04                     
   466                           ;main.c: 105:     LATCbits.LATC0 = 0;
   467  007F04  908B               	bcf	139,0,c	;volatile
   468  007F06  0012               	return		;funcret
   469  007F08                     __end_of_LCD_cmd:
   470                           	callstack 0
   471  0000                     
   472                           	psect	rparam
   473  0000                     
   474                           	psect	idloc
   475                           
   476                           ;Config register IDLOC0 @ 0x200000
   477                           ;	unspecified, using default values
   478  200000                     	org	2097152
   479  200000  FF                 	db	255
   480                           
   481                           ;Config register IDLOC1 @ 0x200001
   482                           ;	unspecified, using default values
   483  200001                     	org	2097153
   484  200001  FF                 	db	255
   485                           
   486                           ;Config register IDLOC2 @ 0x200002
   487                           ;	unspecified, using default values
   488  200002                     	org	2097154
   489  200002  FF                 	db	255
   490                           
   491                           ;Config register IDLOC3 @ 0x200003
   492                           ;	unspecified, using default values
   493  200003                     	org	2097155
   494  200003  FF                 	db	255
   495                           
   496                           ;Config register IDLOC4 @ 0x200004
   497                           ;	unspecified, using default values
   498  200004                     	org	2097156
   499  200004  FF                 	db	255
   500                           
   501                           ;Config register IDLOC5 @ 0x200005
   502                           ;	unspecified, using default values
   503  200005                     	org	2097157
   504  200005  FF                 	db	255
   505                           
   506                           ;Config register IDLOC6 @ 0x200006
   507                           ;	unspecified, using default values
   508  200006                     	org	2097158
   509  200006  FF                 	db	255
   510                           
   511                           ;Config register IDLOC7 @ 0x200007
   512                           ;	unspecified, using default values
   513  200007                     	org	2097159
   514  200007  FF                 	db	255
   515                           
   516                           	psect	config
   517                           
   518                           ;Config register CONFIG1L @ 0x300000
   519                           ;	PLL Selection
   520                           ;	PLLSEL = PLL4X, 4x clock multiplier
   521                           ;	PLL Enable Configuration bit
   522                           ;	CFGPLLEN = ON, PLL Enabled
   523                           ;	CPU System Clock Postscaler
   524                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
   525                           ;	Low Speed USB mode with 48 MHz system clock
   526                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
   527  300000                     	org	3145728
   528  300000  02                 	db	2
   529                           
   530                           ;Config register CONFIG1H @ 0x300001
   531                           ;	Oscillator Selection
   532                           ;	FOSC = INTOSCIO, Internal oscillator
   533                           ;	Primary Oscillator Shutdown
   534                           ;	PCLKEN = ON, Primary oscillator enabled
   535                           ;	Fail-Safe Clock Monitor
   536                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   537                           ;	Internal/External Oscillator Switchover
   538                           ;	IESO = OFF, Oscillator Switchover mode disabled
   539  300001                     	org	3145729
   540  300001  28                 	db	40
   541                           
   542                           ;Config register CONFIG2L @ 0x300002
   543                           ;	Power-up Timer Enable
   544                           ;	nPWRTEN = OFF, Power up timer disabled
   545                           ;	Brown-out Reset Enable
   546                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
   547                           ;	Brown-out Reset Voltage
   548                           ;	BORV = 190, BOR set to 1.9V nominal
   549                           ;	Low-Power Brown-out Reset
   550                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
   551  300002                     	org	3145730
   552  300002  5F                 	db	95
   553                           
   554                           ;Config register CONFIG2H @ 0x300003
   555                           ;	Watchdog Timer Enable bits
   556                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   557                           ;	Watchdog Timer Postscaler
   558                           ;	WDTPS = 32768, 1:32768
   559  300003                     	org	3145731
   560  300003  3C                 	db	60
   561                           
   562                           ; Padding undefined space
   563  300004                     	org	3145732
   564  300004  FF                 	db	255
   565                           
   566                           ;Config register CONFIG3H @ 0x300005
   567                           ;	CCP2 MUX bit
   568                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
   569                           ;	PORTB A/D Enable bit
   570                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
   571                           ;	Timer3 Clock Input MUX bit
   572                           ;	T3CMX = RC0, T3CKI function is on RC0
   573                           ;	SDO Output MUX bit
   574                           ;	SDOMX = RB3, SDO function is on RB3
   575                           ;	Master Clear Reset Pin Enable
   576                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   577  300005                     	org	3145733
   578  300005  D1                 	db	209
   579                           
   580                           ;Config register CONFIG4L @ 0x300006
   581                           ;	Stack Full/Underflow Reset
   582                           ;	STVREN = ON, Stack full/underflow will cause Reset
   583                           ;	Single-Supply ICSP Enable bit
   584                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
   585                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   586                           ;	ICPRT = OFF, ICPORT disabled
   587                           ;	Extended Instruction Set Enable bit
   588                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
   589                           ;	Background Debugger Enable bit
   590                           ;	DEBUG = 0x1, unprogrammed default
   591  300006                     	org	3145734
   592  300006  85                 	db	133
   593                           
   594                           ; Padding undefined space
   595  300007                     	org	3145735
   596  300007  FF                 	db	255
   597                           
   598                           ;Config register CONFIG5L @ 0x300008
   599                           ;	Block 0 Code Protect
   600                           ;	CP0 = OFF, Block 0 is not code-protected
   601                           ;	Block 1 Code Protect
   602                           ;	CP1 = OFF, Block 1 is not code-protected
   603                           ;	Block 2 Code Protect
   604                           ;	CP2 = OFF, Block 2 is not code-protected
   605                           ;	Block 3 Code Protect
   606                           ;	CP3 = OFF, Block 3 is not code-protected
   607  300008                     	org	3145736
   608  300008  0F                 	db	15
   609                           
   610                           ;Config register CONFIG5H @ 0x300009
   611                           ;	Boot Block Code Protect
   612                           ;	CPB = OFF, Boot block is not code-protected
   613                           ;	Data EEPROM Code Protect
   614                           ;	CPD = OFF, Data EEPROM is not code-protected
   615  300009                     	org	3145737
   616  300009  C0                 	db	192
   617                           
   618                           ;Config register CONFIG6L @ 0x30000A
   619                           ;	Block 0 Write Protect
   620                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
   621                           ;	Block 1 Write Protect
   622                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
   623                           ;	Block 2 Write Protect
   624                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
   625                           ;	Block 3 Write Protect
   626                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
   627  30000A                     	org	3145738
   628  30000A  0F                 	db	15
   629                           
   630                           ;Config register CONFIG6H @ 0x30000B
   631                           ;	Configuration Registers Write Protect
   632                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   633                           ;	Boot Block Write Protect
   634                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
   635                           ;	Data EEPROM Write Protect
   636                           ;	WRTD = OFF, Data EEPROM is not write-protected
   637  30000B                     	org	3145739
   638  30000B  E0                 	db	224
   639                           
   640                           ;Config register CONFIG7L @ 0x30000C
   641                           ;	Block 0 Table Read Protect
   642                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
   643                           ;	Block 1 Table Read Protect
   644                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
   645                           ;	Block 2 Table Read Protect
   646                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
   647                           ;	Block 3 Table Read Protect
   648                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
   649  30000C                     	org	3145740
   650  30000C  0F                 	db	15
   651                           
   652                           ;Config register CONFIG7H @ 0x30000D
   653                           ;	Boot Block Table Read Protect
   654                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
   655  30000D                     	org	3145741
   656  30000D  40                 	db	64
   657                           tosu	equ	0xFFF
   658                           tosh	equ	0xFFE
   659                           tosl	equ	0xFFD
   660                           stkptr	equ	0xFFC
   661                           pclatu	equ	0xFFB
   662                           pclath	equ	0xFFA
   663                           pcl	equ	0xFF9
   664                           tblptru	equ	0xFF8
   665                           tblptrh	equ	0xFF7
   666                           tblptrl	equ	0xFF6
   667                           tablat	equ	0xFF5
   668                           prodh	equ	0xFF4
   669                           prodl	equ	0xFF3
   670                           indf0	equ	0xFEF
   671                           postinc0	equ	0xFEE
   672                           postdec0	equ	0xFED
   673                           preinc0	equ	0xFEC
   674                           plusw0	equ	0xFEB
   675                           fsr0h	equ	0xFEA
   676                           fsr0l	equ	0xFE9
   677                           wreg	equ	0xFE8
   678                           indf1	equ	0xFE7
   679                           postinc1	equ	0xFE6
   680                           postdec1	equ	0xFE5
   681                           preinc1	equ	0xFE4
   682                           plusw1	equ	0xFE3
   683                           fsr1h	equ	0xFE2
   684                           fsr1l	equ	0xFE1
   685                           bsr	equ	0xFE0
   686                           indf2	equ	0xFDF
   687                           postinc2	equ	0xFDE
   688                           postdec2	equ	0xFDD
   689                           preinc2	equ	0xFDC
   690                           plusw2	equ	0xFDB
   691                           fsr2h	equ	0xFDA
   692                           fsr2l	equ	0xFD9
   693                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LCD_init
    _main->_send2LCD
    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      30
                           _LCD_init
                           _send2LCD
 ---------------------------------------------------------------------------------
 (1) _send2LCD                                             3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      15
                                              1 COMRAM     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_cmd
   _send2LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       0       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue May 25 11:00:58 2021

                     l41 7F30                       l35 7FF8                       l44 7F90  
                     l36 7FF8                       l53 7F06                       u27 7F24  
                     u37 7F4C                       u47 7F68                       u57 7F84  
                    l731 7EFE                      l733 7F02                      l741 7F38  
                    l735 7F04                      l751 7F5E                      l743 7F3A  
                    l729 7EF6                      l753 7F74                      l745 7F3C  
                    l737 7F32                      l761 7F14                      l755 7F7A  
                    l747 7F42                      l739 7F36                      l763 7F16  
                    l771 7FAC                      l749 7F58                      l765 7F18  
                    l757 7F0A                      l781 7FBC                      l773 7FAE  
                    l767 7F1A                      l759 7F10                      l791 7FDA  
                    l783 7FC2                      l775 7FB0                      l793 7FE0  
                    l785 7FC8                      l777 7FB2                      l769 7F92  
                    l795 7FE6                      l787 7FCE                      l779 7FB6  
                    l797 7FEC                      l789 7FD4                      l799 7FF2  
                    wreg 000FE8          __end_of_LCD_cmd 7F08                     _LATC 000F8B  
                   _LATD 000F8C                     _main 7F92                     start 0000  
           ___param_bank 000000         __end_of_LCD_init 7F92                    ?_main 0001  
                  _PORTD 000F83                    _TRISC 000F94                    _TRISD 000F95  
        __initialization 7EEE             __end_of_main 8000                   ??_main 0004  
          __activetblptr 000000                ??_LCD_cmd 0001                   _ANSELC 000F5D  
                 _ANSELD 000F5E                   _OSCCON 000FD3         __end_of_send2LCD 7F32  
             __accesstop 0060  __end_of__initialization 7EEE                ?_LCD_init 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001                LCD_cmd@cx 0001  
             ??_LCD_init 0002                  _LCD_cmd 7EF4                ?_send2LCD 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7EEE  
                __ramtop 0800                  __ptext0 7F92                  __ptext1 7F08  
                __ptext2 7F32                  __ptext3 7EF4     end_of_initialization 7EEE  
             ??_send2LCD 0001                _TRISCbits 000F94        __size_of_LCD_init 0060  
    start_initialization 7EEE               send2LCD@xy 0003                 ?_LCD_cmd 0001  
      __size_of_send2LCD 002A                 _LATCbits 000F8B                 _LCD_init 7F32  
       __size_of_LCD_cmd 0014                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 006E                 _send2LCD 7F08  
